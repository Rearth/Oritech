plugins {
    id 'fabric-loom' version '1.7-SNAPSHOT'
    id 'maven-publish'
}

version = project.mod_version
group = project.maven_group

base {
    archivesName = project.archives_base_name
}

loom {
    accessWidenerPath = file('src/main/resources/oritech.accesswidener')
}

// un-comment this to enabled oritech debug logging
//loom {
//    log4jConfigs.from file("log4j-dev.xml")
//}

repositories {

    maven {
        name = 'Owo'
        url 'https://maven.wispforest.io/releases/'
    }

    maven {
        name = 'GeckoLib'
        url 'https://dl.cloudsmith.io/public/geckolib3/geckolib/maven/'
    }

    maven { // for REI
        name = 'REI'
        url "https://maven.shedaniel.me/"
    }

    maven { // for athena
        name = 'teamresourceful'
        url "https://maven.teamresourceful.com/repository/maven-public/"
    }

    maven { // for JEI
        name = 'modrinth'
        url "https://modmaven.dev"
    }

    maven { // for EMI
        name = 'TerraformersMC'
        url 'https://maven.terraformersmc.com/'
    }
}

fabricApi {
    configureDataGeneration()
}

dependencies {
    // To change the versions see the gradle.properties file
    minecraft "com.mojang:minecraft:${project.minecraft_version}"
    mappings "net.fabricmc:yarn:${project.yarn_mappings}:v2"
    modImplementation "net.fabricmc:fabric-loader:${project.loader_version}"

    // guava
    implementation("com.google.guava:guava:33.2.1-jre")

    // Fabric API. This is technically optional, but you probably want it anyway.
    modImplementation "net.fabricmc.fabric-api:fabric-api:${project.fabric_version}"

    // owo lib
    modImplementation "io.wispforest:owo-lib:${project.owo_version}"
    modImplementation "io.wispforest:lavender:${project.lavender_version}"
    include "io.wispforest:owo-sentinel:${project.owo_version}"
    annotationProcessor modImplementation("io.wispforest:owo-lib:${project.owo_version}")

    // gecko lib
    modImplementation "software.bernie.geckolib:geckolib-fabric-${project.geckolib_version}"

    // Energy API
    include modApi("teamreborn:energy:${project.reborn_energy_version}") {
        transitive = false
    }

    // REI for Fabric
    modCompileOnly "me.shedaniel:RoughlyEnoughItems-api:${rei_version}"
    modCompileOnly "me.shedaniel:RoughlyEnoughItems-default-plugin:${rei_version}"

    // EMI
    modCompileOnly "dev.emi:emi-fabric:${project.emi_version}:api"

    // athena (CTM)
    modRuntimeOnly "earth.terrarium.athena:athena-fabric-${athena_version}"

    // recipe viewer runtime
    switch (recipe_viewer.toLowerCase(Locale.ROOT)) {
        case "emi": modRuntimeOnly "dev.emi:emi-fabric:${emi_version}"; break
        case "rei": modRuntimeOnly "me.shedaniel:RoughlyEnoughItems-fabric:${rei_version}"; break
        case "disabled": break
        default: println("Unknown recipe viewer specified: ${recipe_viewer}. Must be EMI, REI, or disabled.")
    }
}

processResources {
    inputs.property "version", project.version

    filesMatching("fabric.mod.json") {
        expand "version": project.version
    }
}

tasks.withType(JavaCompile).configureEach {
    it.options.release = 21
}

tasks.withType(AbstractCopyTask).configureEach {
    setDuplicatesStrategy(DuplicatesStrategy.WARN)
}

java {
    // Loom will automatically attach sourcesJar to a RemapSourcesJar task and to the "build" task
    // if it is present.
    // If you remove this line, sources will not be generated.
    withSourcesJar()

    toolchain {
        languageVersion.set(JavaLanguageVersion.of(21))
    }

    sourceCompatibility = JavaVersion.VERSION_21
    targetCompatibility = JavaVersion.VERSION_21
}

jar {
    from("LICENSE.md") {
        rename { "${it}_${project.base.archivesName.get()}" }
    }
}

// configure the maven publication
publishing {
    publications {
        mavenJava(MavenPublication) {
            from components.java
        }
    }

    // See https://docs.gradle.org/current/userguide/publishing_maven.html for information on how to set up publishing.
    repositories {
        // Add repositories to publish to here.
        // Notice: This block does NOT have the same function as the block in the top level.
        // The repositories here will be used for publishing your artifact, not for
        // retrieving dependencies.
    }
}